{"version":3,"sources":["webpack://net-search/./src/extension.ts","webpack://net-search/external \"vscode\"","webpack://net-search/webpack/bootstrap","webpack://net-search/webpack/startup"],"names":["context","disposable","vscode","commands","registerCommand","editor","window","activeTextEditor","selectText","document","getText","selection","items","workspace","getConfiguration","get","map","e","label","description","url","showQuickPick","then","replace","env","openExternal","Uri","parse","subscriptions","push","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"uIAAA,eASA,oBAAyBA,GAIvB,IAAIC,EAAaC,EAAOC,SAASC,gBAC/B,yBACA,K,MACE,MAAMC,EAASH,EAAOI,OAAOC,iBAC7B,IAAKF,EAAQ,OAEb,MAAMG,EAAqBH,EAAOI,SAASC,QAAQL,EAAOM,WAOpDC,GAHsD,QAD7C,EACbV,EAAOW,UAAUC,iBAAiB,aAAaC,IAAI,eAAO,QAAI,IAGhBC,KAAKC,IAAiB,CACpEC,MAAOD,EAAEC,MACTC,YAAaF,EAAEG,QAGjBlB,EAAOI,OAAOe,cAAcT,GAAOU,MAAMX,IACvC,IAAKA,EAAW,OAGhB,MAAMS,EAAMT,EAAUQ,YAAaI,QAAQ,QAASf,GACpDN,EAAOsB,IAAIC,aAAavB,EAAOwB,IAAIC,MAAMP,UAM/CpB,EAAQ4B,cAAcC,KAAK5B,IAI7B,2B,QC9CA6B,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GCE/B,ODCA,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUJ,QAG3C,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAK,EAAoBD,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,QCjBRG,CAAoB,M","file":"extension.js","sourcesContent":["import * as vscode from \"vscode\";\r\n\r\ntype netSearch = {\r\n  label: string;\r\n  url: string;\r\n};\r\n\r\n// 激活您的扩展程序时将调用此方法\r\n// 您的扩展程序在第一次执行命令时被激活\r\nexport function activate(context: vscode.ExtensionContext) {\r\n  // 该命令已在package.json文件中定义\r\n  // 现在使用registerCommand提供命令的实现\r\n  // commandId参数必须与package.json中的command字段匹配\r\n  let disposable = vscode.commands.registerCommand(\r\n    \"net-search.helloWorld\",\r\n    () => {\r\n      const editor = vscode.window.activeTextEditor;\r\n      if (!editor) return;\r\n\r\n      const selectText: string = editor.document.getText(editor.selection);\r\n\r\n      // get config\r\n      const netSearch: any[] =\r\n        vscode.workspace.getConfiguration(\"netSearch\").get(\"urls\") ?? [];\r\n\r\n      // picker\r\n      const items: vscode.QuickPickItem[] = netSearch.map((e: netSearch) => ({\r\n        label: e.label,\r\n        description: e.url,\r\n      }));\r\n\r\n      vscode.window.showQuickPick(items).then((selection) => {\r\n        if (!selection) return;\r\n\r\n        // open url\r\n        const url = selection.description!.replace(/\\${q}/, selectText);\r\n        vscode.env.openExternal(vscode.Uri.parse(url));\r\n        // vscode.window.showInformationMessage(url);\r\n      });\r\n    }\r\n  );\r\n\r\n  context.subscriptions.push(disposable);\r\n}\r\n\r\n// 停用您的扩展程序时调用此方法\r\nexport function deactivate() {}\r\n","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(112);\n"],"sourceRoot":""}